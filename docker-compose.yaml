services:
  app:
    container_name: feed_fusion_v1.0.0
    image: feed_fusion:1.0.0
    build:
      context: .
    env_file:
      - ".env.docker"
    ports:
      - 8888:8888
    networks:
      - "ffusion_net"
    depends_on:
      - postgres
    command: "poetry run python ./src/gunicorn/run.py"
    volumes:
      - ./logs:/app/logs

  celery_worker:
    image: feed_fusion:1.0.0
    container_name: ffusion_celery_worker
    env_file:
      - ".env.docker"
    networks:
      - "ffusion_net"
    depends_on:
      - app
    # command: "poetry run celery --app=src.tasks.app:celery_app worker -l INFO"

  celery_beat:
    image: feed_fusion:1.0.0
    container_name: ffusion_celery_beat
    env_file:
      - ".env.docker"
    networks:
      - "ffusion_net"
    depends_on:
      - app
    # command: "poetry run celery --app=src.tasks.app:celery_app beat -l INFO"

  postgres:
    container_name: ffusion_db
    image: "postgres:17"
    ports:
      - 6432:5432
    volumes:
      - ffusion_pg_db_data:/var/lib/postgresql/data
    networks:
      - "ffusion_net"
    env_file:
      - ".env.postgres"

  redis:
    image: redis:latest
    container_name: ffusion_redis
    ports:
      - "6379:6379"
    networks:
      - "ffusion_net"

  rabbitmq:
    image: rabbitmq:3-management-alpine
    hostname: rabbitmq
    container_name: ffusion_rabbit
    networks:
      - "ffusion_net"
    ports:
      - "5672:5672"
      - "15672:15672"
    env_file:
      - ".env.rabbitmq"
    volumes:
      - ffusion_rmq_data:/var/lib/rabbitmq

volumes:
  ffusion_rmq_data:
  ffusion_pg_db_data:

networks:
  ffusion_net:
    driver: bridge
